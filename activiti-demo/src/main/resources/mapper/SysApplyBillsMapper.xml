<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.chrisli.activiti.dao.SysApplyBillsMapper">

	<resultMap type="org.chrisli.activiti.domain.SysApplyBillsDO" id="SysApplyBillsDOResultMap">
		<id column="id" property="id" />
        <result column="bills_type" property="billsType"/>
        <result column="bills_status" property="billsStatus"/>
        <result column="bills_code" property="billsCode"/>
        <result column="process_definition_id" property="processDefinitionId"/>
        <result column="deployment_id" property="deploymentId"/>
        <result column="process_instance_id" property="processInstanceId"/>
        <result column="created_on" property="createdOn"/>
        <result column="created_by" property="createdBy"/>
	</resultMap>

	<sql id="MybatisSysApplyBillsDAO_all_column_fields">
	      id,bills_type,bills_status,bills_code,process_definition_id,deployment_id,process_instance_id,created_on,created_by
 	</sql>

	<!-- 只有varchar char text类型 做 !='' 判断，生成代码时,其他类型时只做!=null 决断 0或fasle与空''是相同的，在mybatis中的动态语句中 -->
	<sql id="MybatisSysApplyBillsDAO_dynamic_where_fields"><!-- xml转义字符需要 <![CDATA[   ]]> 标签-->
		<where>
			<if test="billsType != null "> AND bills_type = #{billsType} </if>
			<if test="billsStatus != null "> AND bills_status = #{billsStatus} </if>
			<if test="billsCode != null "> AND bills_code = #{billsCode} </if>
			<if test="createdBy != null "> AND created_by = #{createdBy} </if>
		</where>
 	</sql>

	<sql id="MybatisSysApplyBillsDAO_dynamic_where_order_policy">
		<if test="orderPolicyList != null and orderPolicyList.size() > 0 ">
			<foreach item="item" index="index" collection="orderPolicyList" open=" order by "
					 separator="," close="">
				${item.column} ${item.policy}
			</foreach>
		</if>
	</sql>

    <insert id="insert" parameterType="org.chrisli.activiti.domain.SysApplyBillsDO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO SYS_APPLY_BILLS (
				bills_type,
				bills_status,
				bills_code,
				process_definition_id,
				deployment_id,
				process_instance_id,
				created_on,
				created_by
		) values (
				#{billsType},
				#{billsStatus},
				#{billsCode},
				#{processDefinitionId},
				#{deploymentId},
				#{processInstanceId},
				now(),
				#{createdBy}
		)
    </insert>

	<update id="updateDynamic" parameterType="org.chrisli.activiti.domain.SysApplyBillsDO">
		UPDATE SYS_APPLY_BILLS
		<set>
			<if test="billsStatus != null ">bills_status = #{billsStatus},</if>
			<if test="processInstanceId != null ">process_instance_id = #{processInstanceId},</if>
		</set>
		<where>
			<choose>
				<when test="id != null">
					id = #{id}
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</where>
	</update>

	<select id="selectById" parameterType="long" resultMap="SysApplyBillsDOResultMap">
		SELECT
			<include refid="MybatisSysApplyBillsDAO_all_column_fields" />
		FROM
			SYS_APPLY_BILLS
		WHERE
			id = #{id}
	</select>

 	<select id="selectDynamic" resultMap="SysApplyBillsDOResultMap" parameterType="org.chrisli.activiti.domain.SysApplyBillsDO">
	     SELECT
	     	<include refid="MybatisSysApplyBillsDAO_all_column_fields" />
		 FROM
			SYS_APPLY_BILLS
			<include refid="MybatisSysApplyBillsDAO_dynamic_where_fields" />
			<include refid="MybatisSysApplyBillsDAO_dynamic_where_order_policy" />
 	</select>

	<select id="selectDynamicCount" resultType="long" parameterType="org.chrisli.activiti.domain.SysApplyBillsDO">
		SELECT
			count(1)
		FROM
			SYS_APPLY_BILLS
			<include refid="MybatisSysApplyBillsDAO_dynamic_where_fields" />
	</select>

	<select id="selectDynamicPageQuery" resultMap="SysApplyBillsDOResultMap" parameterType="org.chrisli.activiti.domain.SysApplyBillsDO">
		SELECT
			<include refid="MybatisSysApplyBillsDAO_all_column_fields" />
		FROM
			SYS_APPLY_BILLS
			<include refid="MybatisSysApplyBillsDAO_dynamic_where_fields" />
			<include refid="MybatisSysApplyBillsDAO_dynamic_where_order_policy" />
			Limit #{start}, #{pageSize}
	</select>

</mapper>